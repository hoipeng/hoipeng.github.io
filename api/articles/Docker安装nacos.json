{"title":"Docker安装nacos","uid":"141d320c20cacf53e8188cbc9f427f71","slug":"Docker安装nacos","date":"2022-12-02T08:40:39.000Z","updated":"2022-12-02T08:41:14.035Z","comments":true,"path":"api/articles/Docker安装nacos.json","keywords":null,"cover":null,"content":"<h1 id=\"Docker安装nacos\"><a href=\"#Docker安装nacos\" class=\"headerlink\" title=\"Docker安装nacos\"></a>Docker安装nacos</h1><h2 id=\"一、下载镜像\"><a href=\"#一、下载镜像\" class=\"headerlink\" title=\"一、下载镜像\"></a>一、下载镜像</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker  pull nacos&#x2F;nacos-server</code></pre>\n\n\n\n<h2 id=\"二、初始化Nacos数据库\"><a href=\"#二、初始化Nacos数据库\" class=\"headerlink\" title=\"二、初始化Nacos数据库\"></a>二、初始化Nacos数据库</h2><pre class=\"line-numbers language-mysql\" data-language=\"mysql\"><code class=\"language-mysql\">&#x2F;*\n * Copyright 1999-2018 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http:&#x2F;&#x2F;www.apache.org&#x2F;licenses&#x2F;LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *&#x2F;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; config_info   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;config_info&#96; (\n  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,\n  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,\n  &#96;group_id&#96; varchar(255) DEFAULT NULL,\n  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,\n  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,\n  &#96;src_user&#96; text COMMENT &#39;source user&#39;,\n  &#96;src_ip&#96; varchar(50) DEFAULT NULL COMMENT &#39;source ip&#39;,\n  &#96;app_name&#96; varchar(128) DEFAULT NULL,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,\n  &#96;c_desc&#96; varchar(256) DEFAULT NULL,\n  &#96;c_use&#96; varchar(64) DEFAULT NULL,\n  &#96;effect&#96; varchar(64) DEFAULT NULL,\n  &#96;type&#96; varchar(64) DEFAULT NULL,\n  &#96;c_schema&#96; text,\n  &#96;encrypted_data_key&#96; text NOT NULL COMMENT &#39;秘钥&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_configinfo_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info&#39;;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; config_info_aggr   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;config_info_aggr&#96; (\n  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,\n  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,\n  &#96;group_id&#96; varchar(255) NOT NULL COMMENT &#39;group_id&#39;,\n  &#96;datum_id&#96; varchar(255) NOT NULL COMMENT &#39;datum_id&#39;,\n  &#96;content&#96; longtext NOT NULL COMMENT &#39;内容&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL COMMENT &#39;修改时间&#39;,\n  &#96;app_name&#96; varchar(128) DEFAULT NULL,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_configinfoaggr_datagrouptenantdatum&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;datum_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;增加租户字段&#39;;\n\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; config_info_beta   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;config_info_beta&#96; (\n  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,\n  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,\n  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,\n  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,\n  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,\n  &#96;beta_ips&#96; varchar(1024) DEFAULT NULL COMMENT &#39;betaIps&#39;,\n  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,\n  &#96;src_user&#96; text COMMENT &#39;source user&#39;,\n  &#96;src_ip&#96; varchar(50) DEFAULT NULL COMMENT &#39;source ip&#39;,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,\n  &#96;encrypted_data_key&#96; text NOT NULL COMMENT &#39;秘钥&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_configinfobeta_datagrouptenant&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_beta&#39;;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; config_info_tag   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;config_info_tag&#96; (\n  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,\n  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,\n  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;,\n  &#96;tag_id&#96; varchar(128) NOT NULL COMMENT &#39;tag_id&#39;,\n  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,\n  &#96;content&#96; longtext NOT NULL COMMENT &#39;content&#39;,\n  &#96;md5&#96; varchar(32) DEFAULT NULL COMMENT &#39;md5&#39;,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,\n  &#96;src_user&#96; text COMMENT &#39;source user&#39;,\n  &#96;src_ip&#96; varchar(50) DEFAULT NULL COMMENT &#39;source ip&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_configinfotag_datagrouptenanttag&#96; (&#96;data_id&#96;,&#96;group_id&#96;,&#96;tenant_id&#96;,&#96;tag_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_info_tag&#39;;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; config_tags_relation   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;config_tags_relation&#96; (\n  &#96;id&#96; bigint(20) NOT NULL COMMENT &#39;id&#39;,\n  &#96;tag_name&#96; varchar(128) NOT NULL COMMENT &#39;tag_name&#39;,\n  &#96;tag_type&#96; varchar(64) DEFAULT NULL COMMENT &#39;tag_type&#39;,\n  &#96;data_id&#96; varchar(255) NOT NULL COMMENT &#39;data_id&#39;,\n  &#96;group_id&#96; varchar(128) NOT NULL COMMENT &#39;group_id&#39;,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;tenant_id&#39;,\n  &#96;nid&#96; bigint(20) NOT NULL AUTO_INCREMENT,\n  PRIMARY KEY (&#96;nid&#96;),\n  UNIQUE KEY &#96;uk_configtagrelation_configidtag&#96; (&#96;id&#96;,&#96;tag_name&#96;,&#96;tag_type&#96;),\n  KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;config_tag_relation&#39;;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; group_capacity   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;group_capacity&#96; (\n  &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,\n  &#96;group_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Group ID，空字符表示整个集群&#39;,\n  &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;,\n  &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;,\n  &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;,\n  &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数，，0表示使用默认值&#39;,\n  &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;,\n  &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_group_id&#96; (&#96;group_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;集群、各Group容量信息表&#39;;\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; his_config_info   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;his_config_info&#96; (\n  &#96;id&#96; bigint(64) unsigned NOT NULL,\n  &#96;nid&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  &#96;data_id&#96; varchar(255) NOT NULL,\n  &#96;group_id&#96; varchar(128) NOT NULL,\n  &#96;app_name&#96; varchar(128) DEFAULT NULL COMMENT &#39;app_name&#39;,\n  &#96;content&#96; longtext NOT NULL,\n  &#96;md5&#96; varchar(32) DEFAULT NULL,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  &#96;src_user&#96; text,\n  &#96;src_ip&#96; varchar(50) DEFAULT NULL,\n  &#96;op_type&#96; char(10) DEFAULT NULL,\n  &#96;tenant_id&#96; varchar(128) DEFAULT &#39;&#39; COMMENT &#39;租户字段&#39;,\n  &#96;encrypted_data_key&#96; text NOT NULL COMMENT &#39;秘钥&#39;,\n  PRIMARY KEY (&#96;nid&#96;),\n  KEY &#96;idx_gmt_create&#96; (&#96;gmt_create&#96;),\n  KEY &#96;idx_gmt_modified&#96; (&#96;gmt_modified&#96;),\n  KEY &#96;idx_did&#96; (&#96;data_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;多租户改造&#39;;\n\n\n&#x2F;******************************************&#x2F;\n&#x2F;*   数据库全名 &#x3D; nacos_config   *&#x2F;\n&#x2F;*   表名称 &#x3D; tenant_capacity   *&#x2F;\n&#x2F;******************************************&#x2F;\nCREATE TABLE &#96;tenant_capacity&#96; (\n  &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,\n  &#96;tenant_id&#96; varchar(128) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;Tenant ID&#39;,\n  &#96;quota&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;配额，0表示使用默认值&#39;,\n  &#96;usage&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;使用量&#39;,\n  &#96;max_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个配置大小上限，单位为字节，0表示使用默认值&#39;,\n  &#96;max_aggr_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;聚合子配置最大个数&#39;,\n  &#96;max_aggr_size&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#39;,\n  &#96;max_history_count&#96; int(10) unsigned NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;最大变更历史数量&#39;,\n  &#96;gmt_create&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &#39;修改时间&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_tenant_id&#96; (&#96;tenant_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;租户容量信息表&#39;;\n\n\nCREATE TABLE &#96;tenant_info&#96; (\n  &#96;id&#96; bigint(20) NOT NULL AUTO_INCREMENT COMMENT &#39;id&#39;,\n  &#96;kp&#96; varchar(128) NOT NULL COMMENT &#39;kp&#39;,\n  &#96;tenant_id&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_id&#39;,\n  &#96;tenant_name&#96; varchar(128) default &#39;&#39; COMMENT &#39;tenant_name&#39;,\n  &#96;tenant_desc&#96; varchar(256) DEFAULT NULL COMMENT &#39;tenant_desc&#39;,\n  &#96;create_source&#96; varchar(32) DEFAULT NULL COMMENT &#39;create_source&#39;,\n  &#96;gmt_create&#96; bigint(20) NOT NULL COMMENT &#39;创建时间&#39;,\n  &#96;gmt_modified&#96; bigint(20) NOT NULL COMMENT &#39;修改时间&#39;,\n  PRIMARY KEY (&#96;id&#96;),\n  UNIQUE KEY &#96;uk_tenant_info_kptenantid&#96; (&#96;kp&#96;,&#96;tenant_id&#96;),\n  KEY &#96;idx_tenant_id&#96; (&#96;tenant_id&#96;)\n) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8 COLLATE&#x3D;utf8_bin COMMENT&#x3D;&#39;tenant_info&#39;;\n\nCREATE TABLE &#96;users&#96; (\n\t&#96;username&#96; varchar(50) NOT NULL PRIMARY KEY,\n\t&#96;password&#96; varchar(500) NOT NULL,\n\t&#96;enabled&#96; boolean NOT NULL\n);\n\nCREATE TABLE &#96;roles&#96; (\n\t&#96;username&#96; varchar(50) NOT NULL,\n\t&#96;role&#96; varchar(50) NOT NULL,\n\tUNIQUE INDEX &#96;idx_user_role&#96; (&#96;username&#96; ASC, &#96;role&#96; ASC) USING BTREE\n);\n\nCREATE TABLE &#96;permissions&#96; (\n    &#96;role&#96; varchar(50) NOT NULL,\n    &#96;resource&#96; varchar(255) NOT NULL,\n    &#96;action&#96; varchar(8) NOT NULL,\n    UNIQUE INDEX &#96;uk_role_permission&#96; (&#96;role&#96;,&#96;resource&#96;,&#96;action&#96;) USING BTREE\n);\n\nINSERT INTO users (username, password, enabled) VALUES (&#39;nacos&#39;, &#39;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#39;, TRUE);\n\nINSERT INTO roles (username, role) VALUES (&#39;nacos&#39;, &#39;ROLE_ADMIN&#39;);\n</code></pre>\n\n\n\n<h2 id=\"三、启动Nacos\"><a href=\"#三、启动Nacos\" class=\"headerlink\" title=\"三、启动Nacos\"></a>三、启动Nacos</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#解释版 复制下面的版本注意\\后面不能有空格\ndocker run -d \\\n-e MODE&#x3D;standalone \\ # 使用单机模式\n-e SPRING_DATASOURCE_PLATFORM&#x3D;mysql \\ # 数据库类型\n-e MYSQL_SERVICE_HOST&#x3D;localhost \\ # 数据库地址\n-e MYSQL_SERVICE_USER&#x3D;root \\ # 数据库账号\n-e MYSQL_SERVICE_PASSWORD&#x3D;pyongsen \\ # 数据库密码\n-e MYSQL_SERVICE_DB_NAME&#x3D;nacos_config \\ # 数据库名称\n-e JVM_XMS&#x3D;256m \\\n-e JVM_XMX&#x3D;256m \\\n-e JVM_XMN&#x3D;256m \\\n-p 8848:8848 \\ #端口映射\n-v &#x2F;lbs&#x2F;nacos&#x2F;logs:&#x2F;nacos&#x2F;logs \\ #挂载\n--name nacos \\ #容器名 \n--restart&#x3D;always \\ # 自动启动\nnacos&#x2F;nacos-server:latest #镜像名:版本（是最新的版本直接镜像名即可）\n\ndocker run -d \\\n-e MODE&#x3D;standalone \\\n-e SPRING_DATASOURCE_PLATFORM&#x3D;mysql \\\n-e MYSQL_SERVICE_HOST&#x3D;114.132.237.53 \\\n-e MYSQL_SERVICE_USER&#x3D;root \\\n-e MYSQL_SERVICE_PASSWORD&#x3D;pyongsen \\\n-e MYSQL_SERVICE_DB_NAME&#x3D;nacos_config \\\n-e JVM_XMS&#x3D;256m \\\n-e JVM_XMX&#x3D;256m \\\n-e JVM_XMN&#x3D;256m \\\n-p 8848:8848 \\\n -v &#x2F;lbs&#x2F;nacos&#x2F;logs:&#x2F;nacos&#x2F;logs \\\n--name nacos \\\n--restart&#x3D;always \\\nnacos&#x2F;nacos-server:latest\n</code></pre>\n\n\n<h2 id=\"四、访问Nacos\"><a href=\"#四、访问Nacos\" class=\"headerlink\" title=\"四、访问Nacos\"></a>四、访问Nacos</h2><p>如果是本地就用本地，是服务器就将localhost替换成服务器地址<br><a href=\"http://127.0.0.1:8848/nacos\">http://127.0.0.1:8848/nacos</a></p>\n<h2 id=\"五、坑点\"><a href=\"#五、坑点\" class=\"headerlink\" title=\"五、坑点\"></a>五、坑点</h2><ol>\n<li><p>Nacos-client客户端从1.0升级到2.x版本后，新增gRPC的通信方式，新增了两个端口。这两个端口在nacos原先的端口上（8848），进行一定偏移量自动生成。</p>\n<table>\n<thead>\n<tr>\n<th>端口</th>\n<th>与主端口的偏移量</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>9848</td>\n<td>1000</td>\n<td>客户端gRPC请求服务端端口，用于客户端向服务端发起连接和请求</td>\n</tr>\n<tr>\n<td>9849</td>\n<td>1001</td>\n<td>服务端gRPC请求服务端端口，用于服务间同步等</td>\n</tr>\n</tbody></table>\n</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>防火墙需要开放8848、9848、9849端口</li>\n<li>如果使用docker部署，需要将9848、9849端口映射出来</li>\n<li>如果主端口更改，相应的gRPC通信端口也要按照偏移量进行更改。例如：主端口改为18848，则对应的g RPC端口应为19848、19849，转发端口时同理。</li>\n</ol></blockquote>\n","feature":true,"text":"Docker安装nacos一、下载镜像docker pull nacos&#x2F;nacos-server 二、初始化Nacos数据库&#x2F;* * Copyright 1999-2018 Alibaba Group Holding Ltd. * * Licensed un...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":9,"path":"api/categories/程序猿🐒.json"},{"name":"Docker","slug":"程序猿🐒/Docker","count":3,"path":"api/categories/程序猿🐒/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":3,"path":"api/tags/Docker.json"},{"name":"Nacos","slug":"Nacos","count":1,"path":"api/tags/Nacos.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Docker%E5%AE%89%E8%A3%85nacos\"><span class=\"toc-text\">Docker安装nacos</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E4%B8%8B%E8%BD%BD%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">一、下载镜像</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%88%9D%E5%A7%8B%E5%8C%96Nacos%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">二、初始化Nacos数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%90%AF%E5%8A%A8Nacos\"><span class=\"toc-text\">三、启动Nacos</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E8%AE%BF%E9%97%AENacos\"><span class=\"toc-text\">四、访问Nacos</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%9D%91%E7%82%B9\"><span class=\"toc-text\">五、坑点</span></a></li></ol></li></ol>","author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Docker开放2375端口","uid":"7be2343f42652ac906502eeb9c266f8f","slug":"Docker开放2375端口","date":"2022-12-05T07:24:10.000Z","updated":"2022-12-05T07:24:59.535Z","comments":true,"path":"api/articles/Docker开放2375端口.json","keywords":null,"cover":[],"text":"docker.service 文件内容在不同 docker 版本中不一样 第一种编辑docker文件 vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service 在 ExecStart 行最后面加入红框中...","link":"","photos":[],"count_time":{"symbolsCount":610,"symbolsTime":"1 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":9,"path":"api/categories/程序猿🐒.json"},{"name":"Docker","slug":"程序猿🐒/Docker","count":3,"path":"api/categories/程序猿🐒/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":3,"path":"api/tags/Docker.json"}],"author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Kettle 处理MQTT数据并存储至数据库","uid":"7d7b34d825d74f6d0b144da0dc166733","slug":"Kettle","date":"2022-12-02T08:37:31.000Z","updated":"2022-12-02T08:38:52.980Z","comments":true,"path":"api/articles/Kettle.json","keywords":null,"cover":[],"text":"Kettle 处理MQTT数据并存储至数据库1、新建【转换】test2.ktr 2、选择【MQTT consumer】组件 3、右键点击【编辑步骤】 4、配置MQTT消费者连接信息 新建message处理转换（test1.ktr） 填写MQTT连接地址 输入客户端ID（自己定义不...","link":"","photos":[],"count_time":{"symbolsCount":851,"symbolsTime":"1 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":9,"path":"api/categories/程序猿🐒.json"},{"name":"Kettle","slug":"程序猿🐒/Kettle","count":1,"path":"api/categories/程序猿🐒/Kettle.json"}],"tags":[{"name":"Kettle","slug":"Kettle","count":1,"path":"api/tags/Kettle.json"}],"author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}