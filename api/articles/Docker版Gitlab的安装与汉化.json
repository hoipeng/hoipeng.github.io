{"title":"Docker版Gitlab的安装与汉化","uid":"ae72657417f8c8230eee1e7101a8f14b","slug":"Docker版Gitlab的安装与汉化","date":"2022-12-05T07:37:28.000Z","updated":"2022-12-05T07:38:12.031Z","comments":true,"path":"api/articles/Docker版Gitlab的安装与汉化.json","keywords":null,"cover":[],"content":"<h1 id=\"一、gitlab安装\"><a href=\"#一、gitlab安装\" class=\"headerlink\" title=\"一、gitlab安装\"></a>一、gitlab安装</h1><h2 id=\"1-1-镜像查询\"><a href=\"#1-1-镜像查询\" class=\"headerlink\" title=\"1.1 镜像查询\"></a>1.1 镜像查询</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查询gitlab有哪些镜像\n docker search gitlab</code></pre>\n\n<h2 id=\"1-2-镜像拉取（重点）\"><a href=\"#1-2-镜像拉取（重点）\" class=\"headerlink\" title=\"1.2 镜像拉取（重点）\"></a>1.2 镜像拉取（重点）</h2><p>镜像的拉取会直接影响到后面我们汉化，所以镜像的选择尤为重要。<br><img src=\"/media/16070639801870/16070642636024.jpg\" alt=\"-w725\"></p>\n<p>可以看到主要有两个镜像，比较方便我们利用的，第一个是官方社区版的镜像，第四个是其他大神爱好者汉化社区版的镜像。后续两种镜像我都会进行介绍。</p>\n<h3 id=\"1-2-1-官方社区版\"><a href=\"#1-2-1-官方社区版\" class=\"headerlink\" title=\"1.2.1 官方社区版\"></a>1.2.1 官方社区版</h3><p>官方社区版是纯英语的，可以原汁原味地体验gitlab。而且镜像更新非常积极，新加的功能都能够体验到。</p>\n<p>如果使用以下命令拉取，得到的就会是最新版的gitlab。    </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull gitlab&#x2F;gitlab-ce</code></pre>\n\n<p>但是最新版有个弊端就gitlab的中文比一定能马上匹配。如果想知道现在汉化匹配到什么版本了，可以查看gitlab中文社区。</p>\n<p><a href=\"https://gitlab.com/xhang/gitlab/\">https://gitlab.com/xhang/gitlab/</a></p>\n<p>下面都是基于12.3.5版本。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker pull gitlab&#x2F;gitlab-ce:12.3.5-ce.0</code></pre>\n\n<h3 id=\"1-2-2-已汉化社区版\"><a href=\"#1-2-2-已汉化社区版\" class=\"headerlink\" title=\"1.2.2 已汉化社区版\"></a>1.2.2 已汉化社区版</h3><p>如果不想自己汉化的话，可以选择第四个是汉化社区版的镜像。</p>\n<p>但是这个镜像目前已经快2年没有更新维护了，gitlab版本也是上一个版本11.1。</p>\n<h2 id=\"1-3-镜像安装\"><a href=\"#1-3-镜像安装\" class=\"headerlink\" title=\"1.3 镜像安装\"></a>1.3 镜像安装</h2><p>镜像拉取下来后，使用docker images查看自己拉取的镜像，然后使用docker run启动gitlab容器，建议启动命令写成一个bash，防止忘记自己启动时的参数配置。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nIMAGE_NAME&#x3D;&#39;gitlab&#x2F;gitlab-ce&#39;\nCONTAINER_NAME&#x3D;&#39;gitlab-ce-zh&#39;\nCONTAINER_ID&#x3D;&#96;docker run \n                -d \n                -p 30000:80 \n                -p 37443:443 \n                -p 37022:22 \n                --restart always \n                -v &#x2F;volume1&#x2F;docker&#x2F;gitlab&#x2F;config:&#x2F;etc&#x2F;gitlab \n                -v &#x2F;volume1&#x2F;docker&#x2F;gitlab&#x2F;logs:&#x2F;var&#x2F;log&#x2F;gitlab \n                -v &#x2F;volume1&#x2F;docker&#x2F;gitlab&#x2F;data:&#x2F;var&#x2F;opt&#x2F;gitlab \n                --name $&#123;CONTAINER_NAME&#125; \n                $&#123;IMAGE_NAME&#125;&#96;\n            \n# -d：后台运行    \n# -p：将容器内部端口向外映射\n# --name：命名容器名称    \n# -v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录    \n# 以上参数的具体用法，建议读者可以自己动手对比添加和不添加的区别，加深学习印象</code></pre>\n\n<p>命令运行结束后，会出现容器ID，可以通过docker ps查看容器是否成功启动。然后访问gitlab的地址，如果能打开gitlab主页说明已经成功运行。如果使用的是中文社区版的，打开之后就是中文的了。</p>\n<p><img src=\"https://nas.hoipeng.cn:9000/picgo/2022/12/05/202212051531651.jpg\" alt=\"-w1087\"></p>\n<h1 id=\"二、gitlab配置\"><a href=\"#二、gitlab配置\" class=\"headerlink\" title=\"二、gitlab配置\"></a>二、gitlab配置</h1><h2 id=\"2-1-访问url配置\"><a href=\"#2-1-访问url配置\" class=\"headerlink\" title=\"2.1 访问url配置\"></a>2.1 访问url配置</h2><p>url的配置在&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb里面，基本上gitlab的所有配置都可以在gitlab.rb这个文件里面完成配置。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># url配置样例\nexternal_url &#x3D; &#39;http:&#x2F;&#x2F;127.0.0.1:80&#x2F;gitlab&#39;</code></pre>\n\n<h2 id=\"2-2-管理员配置\"><a href=\"#2-2-管理员配置\" class=\"headerlink\" title=\"2.2 管理员配置\"></a>2.2 管理员配置</h2><p>首次登录还需要配置管理员密码，管理员账号为root，密码在首次登录的页面上设置。</p>\n<h1 id=\"三、汉化\"><a href=\"#三、汉化\" class=\"headerlink\" title=\"三、汉化\"></a>三、汉化</h1><p>如果直接使用汉化的docker镜像就不用进行这一步了。</p>\n<h2 id=\"3-1-获取汉化包\"><a href=\"#3-1-获取汉化包\" class=\"headerlink\" title=\"3.1 获取汉化包\"></a>3.1 获取汉化包</h2><p>访问<a href=\"https://gitlab.com/xhang/gitlab/\">https://gitlab.com/xhang/gitlab/</a>，根据自己的gitlab获取相应版本的汉化包。也可以使用大stable版本。比如12.3.5可以使用gitlab-12-3-stable-zh</p>\n<p>可以通过命令获取</p>\n<h1 id=\"首先查看gitlab的版本\"><a href=\"#首先查看gitlab的版本\" class=\"headerlink\" title=\"首先查看gitlab的版本\"></a>首先查看gitlab的版本</h1><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cat &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails&#x2F;VERSION\n# 使用wget获取具体的版本\nwget https:&#x2F;&#x2F;gitlab.com&#x2F;xhang&#x2F;gitlab&#x2F;-&#x2F;archive&#x2F;v12.3.5-zh&#x2F;gitlab-v12.3.5-zh.tar.gz\n# 或者用git获取大版本\ngit clone -b gitlab-12-3-stable-zh https:&#x2F;&#x2F;gitlab.com&#x2F;xhang&#x2F;gitlab&#x2F;</code></pre>\n\n<p>也可以直接下载<br><img src=\"/media/16467074687825/16070666131876.jpg\" alt=\"-w1317\"></p>\n<h2 id=\"3-2-汉化\"><a href=\"#3-2-汉化\" class=\"headerlink\" title=\"3.2 汉化\"></a>3.2 汉化</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 把汉化包复制到容器&#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service目录下    \ndocker cp [汉化包名称] [容器ID]:&#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service\n\n# 进去容器里面继续操作    \ndocker exec -it [容器ID] bash    \ncd &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service\n\n# 把汉化包里面的所有文件复制到gitlab-rails里面    \ncp -rf [汉化包名称]&#x2F;* gitlab-rails\n    \n# 如果出现下面两条语句是正常的    \ncp: cannot overwrite non-directory &#39;gitlab-rails&#x2F;log&#39; with directory &#39;gitlab-v12.3.5-zh&#x2F;log&#39;\ncp: cannot overwrite non-directory &#39;gitlab-rails&#x2F;tmp&#39; with directory &#39;gitlab-v12.3.5-zh&#x2F;tmp&#39;\n\n# 重新加载和启动gitlab    \ngitlab-ctl reconfigure     \ngitlab-ctl restart</code></pre>\n\n<p>再次访问主页，已经汉化了。</p>\n<p><img src=\"https://nas.hoipeng.cn:9000/picgo/2022/12/05/202212051531307.png\">可以使用docker commit命令把已经汉化的版本保存成镜像，方便下次迁移使用。    </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker commit -a &quot;[作者]&quot; [容器ID] [新的镜像名]:[tag]</code></pre>","text":"一、gitlab安装1.1 镜像查询# 查询gitlab有哪些镜像 docker search gitlab 1.2 镜像拉取（重点）镜像的拉取会直接影响到后面我们汉化，所以镜像的选择尤为重要。 可以看到主要有两个镜像，比较方便我们利用的，第一个是官方社区版的镜像，第四个是其他大...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":14,"path":"api/categories/程序猿🐒.json"},{"name":"Docker","slug":"程序猿🐒/Docker","count":4,"path":"api/categories/程序猿🐒/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81gitlab%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">一、gitlab安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E9%95%9C%E5%83%8F%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">1.1 镜像查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E9%95%9C%E5%83%8F%E6%8B%89%E5%8F%96%EF%BC%88%E9%87%8D%E7%82%B9%EF%BC%89\"><span class=\"toc-text\">1.2 镜像拉取（重点）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-1-%E5%AE%98%E6%96%B9%E7%A4%BE%E5%8C%BA%E7%89%88\"><span class=\"toc-text\">1.2.1 官方社区版</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-2-%E5%B7%B2%E6%B1%89%E5%8C%96%E7%A4%BE%E5%8C%BA%E7%89%88\"><span class=\"toc-text\">1.2.2 已汉化社区版</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1.3 镜像安装</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81gitlab%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">二、gitlab配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E8%AE%BF%E9%97%AEurl%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.1 访问url配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E7%AE%A1%E7%90%86%E5%91%98%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.2 管理员配置</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%B1%89%E5%8C%96\"><span class=\"toc-text\">三、汉化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E8%8E%B7%E5%8F%96%E6%B1%89%E5%8C%96%E5%8C%85\"><span class=\"toc-text\">3.1 获取汉化包</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A6%96%E5%85%88%E6%9F%A5%E7%9C%8Bgitlab%E7%9A%84%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">首先查看gitlab的版本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E6%B1%89%E5%8C%96\"><span class=\"toc-text\">3.2 汉化</span></a></li></ol></li></ol>","author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MySQL创建定时器","uid":"35f9da2ff904b5c3201ae1ff19769ee3","slug":"MySQL创建定时器","date":"2022-12-07T12:00:00.000Z","updated":"2022-12-07T12:15:07.434Z","comments":true,"path":"api/articles/MySQL创建定时器.json","keywords":null,"cover":[],"text":"1. 介绍 在开发过程中经常会遇到这样一个问题：每天或者每月必须定时去执行一条sql语句或更新或删除或执行特定的sql语句。 注意: mysql定时器是从mysql5.1开始的，如果你的mysql版本低于5.1，那就不能使用mysql定时器 2. 开启定时器 MySQL定时器默认...","link":"","photos":[],"count_time":{"symbolsCount":823,"symbolsTime":"1 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":14,"path":"api/categories/程序猿🐒.json"},{"name":"数据库","slug":"程序猿🐒/数据库","count":2,"path":"api/categories/程序猿🐒/数据库.json"},{"name":"MySQL","slug":"程序猿🐒/数据库/MySQL","count":1,"path":"api/categories/程序猿🐒/数据库/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"},{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"}],"author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Docker开放2375端口","uid":"7be2343f42652ac906502eeb9c266f8f","slug":"Docker开放2375端口","date":"2022-12-05T07:24:10.000Z","updated":"2022-12-05T07:24:59.535Z","comments":true,"path":"api/articles/Docker开放2375端口.json","keywords":null,"cover":[],"text":"docker.service 文件内容在不同 docker 版本中不一样 第一种编辑docker文件 vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service 在 ExecStart 行最后面加入红框中...","link":"","photos":[],"count_time":{"symbolsCount":610,"symbolsTime":"1 mins."},"categories":[{"name":"程序猿🐒","slug":"程序猿🐒","count":14,"path":"api/categories/程序猿🐒.json"},{"name":"Docker","slug":"程序猿🐒/Docker","count":4,"path":"api/categories/程序猿🐒/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":4,"path":"api/tags/Docker.json"}],"author":{"name":"慎独丶九思","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"君子慎独，不欺暗室。<br />卑以自牧，含章可贞。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}